CREATE TABLE MYEMPLOYEE (EMPLOYEE_ID INT, FIRSTNAME VARCHAR(20), LASTNAME VARCHAR(20))

INSERT INTO MYEMPLOYEE VALUES (1, 'Michael', 'Yemi')
INSERT INTO MYEMPLOYEE VALUES (2, 'Daniel', 'Scot')
INSERT INTO MYEMPLOYEE VALUES (3, 'John', 'Bull')

SELECT * FROM MYEMPLOYEE

CREATE TABLE MYSALARY (EMPLOYEE_ID INT, SALARY FLOAT)

INSERT INTO MYSALARY VALUES (1, 10000)
INSERT INTO MYSALARY VALUES (2, 8000)
INSERT INTO MYSALARY VALUES (3, 6000)

SELECT * FROM MYEMPLOYEE
SELECT * FROM MYSALARY

SELECT A.FIRSTNAME, A.LASTNAME, B.SALARY
FROM MYEMPLOYEE A INNER JOIN MYSALARY B ON A.EMPLOYEE_ID = B.EMPLOYEE_ID


SELECT * FROM MYEMPLOYEE
SELECT * FROM MYSALARY
SELECT A.*, B.SALARY
FROM MYEMPLOYEE A INNER JOIN MYSALARY B ON A.EMPLOYEE_ID = B.EMPLOYEE_ID


SELECT A.*, B.SALARY
FROM MYEMPLOYEE A INNER JOIN MYSALARY B ON A.EMPLOYEE_ID = B.EMPLOYEE_ID

---
-- LEFT JOIN
---

CREATE TABLE MYPHONENUM (EMPLOYEE_ID INT, PHONE_NUMBER INT)

INSERT INTO MYPHONENUM VALUES (1, 121112385)
INSERT INTO MYPHONENUM VALUES (2, 121345972)

SELECT* FROM MYPHONENUM

SELECT A.FIRSTNAME, A.LASTNAME, C.PHONE_NUMBER
FROM MYEMPLOYEE A LEFT JOIN MYPHONENUM C ON A.EMPLOYEE_ID = C.EMPLOYEE_ID

---
-- RIGHT JOIN
---
CREATE TABLE MYPARKINGSPOT (EMPLOYEE_ID INT, PARKINGSPOT VARCHAR(20))

INSERT INTO MYPARKINGSPOT VALUES (1, 'A1')
INSERT INTO MYPARKINGSPOT VALUES (2, 'A2')

SELECT * FROM MYPARKINGSPOT

SELECT A.PARKINGSPOT, B.FIRSTNAME, B.LASTNAME
FROM MYPARKINGSPOT A FULL JOIN MYEMPLOYEE B ON A.EMPLOYEE_ID = B.EMPLOYEE_ID

---
-- FULL OUTER JOIN
---
TRUNCATE TABLE MYCUSTOMER
CREATE TABLE MYCUSTOMER (CUSTOMERID INT, CUSTOMERNAME VARCHAR(20))
INSERT INTO MYCUSTOMER VALUES (1, 'Rajash')
INSERT INTO MYCUSTOMER VALUES (3, 'Kudus')

TRUNCATE TABLE MYORDER
CREATE TABLE MYORDER (ORDERNO INT, ORDERNAME VARCHAR(20), CUSTOMERID INT)
INSERT INTO MYORDER VALUES (1, 'SomeOrder1', 1)
INSERT INTO MYORDER VALUES (2, 'SomeOrder2', 2)
INSERT INTO MYORDER VALUES (3, 'SomeOrder3', 6)
INSERT INTO MYORDER VALUES (4, 'SomeOrder4', 8)

SELECT * FROM MYCUSTOMER
SELECT * FROM MYORDER

SELECT A.*, B.ORDERNO, B.ORDERNAME 
FROM MYCUSTOMER A FULL OUTER JOIN MYORDER B 
ON A.CUSTOMERID = B.CUSTOMERID


--
--CROSS JOIN
--
SELECT * FROM MYCUSTOMER
SELECT * FROM MYSALARY

SELECT * FROM MYCUSTOMER CROSS JOIN MYSALARY
--SELECT * FROM MYCUSTOMER, MYSALARY


--- DATE

--Get Current Date
SELECT GETDATE()

-- Get date of 3days ago
SELECT GETDATE() - 3

SELECT GETDATE(), GETDATE() - 3

--DATEPART (GET ONLY PART OF THE DATE..DD, MM, YY..)
SELECT DATEPART(YYYY, GETDATE())
SELECT DATEPART(YYYY, GETDATE()) AS YEARNUMBER

SELECT DATEPART(MM, GETDATE()) AS MONTHNUMBER

SELECT DATEPART(DD, GETDATE()) AS DAYNUMBER

--- DATEADD
SELECT DATEADD(day, 4, GETDATE())   --Add 4 days to current date

SELECT DATEADD(day, 4, '4/10/2024')

SELECT DATEADD(month, 4, GETDATE())  --Add 4 months to current date

SELECT DATEADD(year, 4, GETDATE()) --Add 4 years to current date


--- working with example Table ----

SELECT TOP 10 * FROM [Production].[WorkOrder]

--DATEDIFF
SELECT workOrderID, ProductID, StartDate, EndDate, DATEDIFF(day, StartDate, EndDate) AS DateDifference
FROM [Production].[WorkOrder]

---Get the first day of this month
--SELECT GETDATE() - 1
--SELECT (DATEPART(day, GETDATE()) - 1)
SELECT DATEADD(dd, -(DATEPART(day, GETDATE()) - 1), GETDATE())


---AGGREGATE FUNCTION
-- USING MYSALARY TABLE
SELECT * FROM MYSALARY

DELETE FROM MYSALARY
WHERE SALARY = 121345972

SELECT AVG(SALARY) FROM MYSALARY

SELECT COUNT(SALARY) FROM MYSALARY

SELECT COUNT(*) FROM MYSALARY

SELECT SUM(SALARY) FROM MYSALARY

SELECT MIN(SALARY) FROM MYSALARY

SELECT MAX(SALARY) FROM MYSALARY

SELECT SUM(SALARY) FROM MYSALARY

--- STRING FUNCTIONS
-- USING MYORDER TABLE
SELECT * FROM MYORDER

--CONCAT
PRINT CONCAT('MyString1',' ', 'MyString2')


SELECT ORDERNO, ORDERNAME, CONCAT('ORDERNO', ' ', 'ORDERNAME') AS CONCATORDER
FROM MYORDER

SELECT ORDERNO, ORDERNAME, CONCAT(MYORDER.ORDERNO, ' ', MYORDER.ORDERNAME) AS CONCATORDER
FROM MYORDER

SELECT ORDERNO, ORDERNAME, CONCAT(ORDERNAME, ' ', RAND()) AS CONCATORDER     --RAND() -Random number
FROM MYORDER

--- LEFT  (select the characters from the left)
SELECT ORDERNO, ORDERNAME, LEFT(ORDERNAME, 5)  
FROM MYORDER

--- RIGHT  (select the characters from the right)
SELECT ORDERNO, ORDERNAME, RIGHT(ORDERNAME, 5)  
FROM MYORDER

--- SUBSTRING (select inbetween the characters)
--(2, 5)pick 5 characters starting from number 2
SELECT ORDERNO, ORDERNAME, SUBSTRING(ORDERNAME, 2, 5)  
FROM MYORDER

----LOWER CASE
--- LEFT  (select the characters from the left)
SELECT ORDERNO, ORDERNAME, LOWER(ORDERNAME) AS LOWERCASE FROM MYORDER

---UPPER
SELECT ORDERNO, ORDERNAME, UPPER(ORDERNAME) AS UPPERCASE FROM MYORDER

---LENGTH
SELECT ORDERNO, ORDERNAME, LEN(ORDERNAME) FROM MYORDER

--STRING MANIPULATION
--LETS DO FIRST CHAR UPPER AND OTHERS LOWER CASE 
SELECT ORDERNO, ORDERNAME, CONCAT(UPPER(LEFT(ORDERNAME, 1)), LOWER(SUBSTRING(ORDERNAME, 2, LEN(ORDERNAME)))) 
FROM MYORDER

---TRIM
SELECT '   Mytext  '
SELECT LEN('   Mytext  ')

--LTRIM AND RTRIM
SELECT LTRIM('   Mytext  ')

SELECT RTRIM('   Mytext  ')

SELECT LTRIM(RTRIM('   Mytext  '))


--select top 5 * from [Person].[Address]

--select distinct (City) from [Person].[Address]

